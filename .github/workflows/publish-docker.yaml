name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
    paths-ignore:
      - "docs/**"
      - "mkdocs.yml"

env:
  REGISTRY: ghcr.io # Or Docker Hub: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-commit:
    name: Linting Checks
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Check files
        uses: pre-commit/action@v3.0.1
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs:
      - pre-commit
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # or use Docker Hub credentials

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true # Push image to registry
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
